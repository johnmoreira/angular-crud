{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:3001/products\";\n  }\n  showMessage(msg) {}\n  create(product) {\n    return this.http.post(this.baseUrl, product);\n  }\n  read() {\n    return this.http.get(this.baseUrl);\n  }\n  readById(id) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get(url);\n  }\n  update(Product) {\n    const url = `${this.baseUrl}/${Product.id}`;\n    return this.http.put(url, Product);\n  }\n  delete(id) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.delete(url);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProductService","constructor","http","baseUrl","showMessage","msg","create","product","post","read","get","readById","id","url","update","Product","put","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/developer/Workspace/angular-crud/src/app/components/products/product.service.ts"],"sourcesContent":["\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from './product.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  baseUrl = \"http://localhost:3001/products\"\n\n  constructor(private http: HttpClient) { }\n\n  showMessage(msg: string): void { }\n\n  create(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.baseUrl, product)\n  }\n  \n  read(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.baseUrl)\n  }\n\n  readById(id: string): Observable<Product> {\n    const url = `${this.baseUrl}/${id}`\n    return this.http.get<Product>(url)\n  }\n\n  update(Product: Product): Observable<Product> {\n    const url = `${this.baseUrl}/${Product.id}`\n    return this.http.put<Product>(url, Product)\n  }\n\n  delete(id: number): Observable<Product> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.delete<Product>(url);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,gCAAgC;EAEF;EAExCC,WAAWA,CAACC,GAAW,GAAU;EAEjCC,MAAMA,CAACC,OAAgB;IACrB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,IAAI,CAACL,OAAO,EAAEI,OAAO,CAAC;EACvD;EAEAE,IAAIA,CAAA;IACF,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAY,IAAI,CAACP,OAAO,CAAC;EAC/C;EAEAQ,QAAQA,CAACC,EAAU;IACjB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACV,OAAO,IAAIS,EAAE,EAAE;IACnC,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAUG,GAAG,CAAC;EACpC;EAEAC,MAAMA,CAACC,OAAgB;IACrB,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACV,OAAO,IAAIY,OAAO,CAACH,EAAE,EAAE;IAC3C,OAAO,IAAI,CAACV,IAAI,CAACc,GAAG,CAAUH,GAAG,EAAEE,OAAO,CAAC;EAC7C;EAEAE,MAAMA,CAACL,EAAU;IACf,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACV,OAAO,IAAIS,EAAE,EAAE;IACnC,OAAO,IAAI,CAACV,IAAI,CAACe,MAAM,CAAUJ,GAAG,CAAC;EACvC;EAAC,QAAAK,CAAA,G;qBA7BUlB,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdvB,cAAc;IAAAwB,OAAA,EAAdxB,cAAc,CAAAyB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}