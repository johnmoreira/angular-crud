{"ast":null,"code":"import { EMPTY, catchError, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:3001/products\";\n  }\n  showMessage(msg) {}\n  create(product) {\n    return this.http.post(this.baseUrl, product).pipe(map(obj => obj), catchError(e => this.errorHandler(e)));\n  }\n  read() {\n    return this.http.get(this.baseUrl).pipe(map(obj => obj), catchError(e => this.errorHandler(e)));\n  }\n  readById(id) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get(url).pipe(map(obj => obj), catchError(e => this.errorHandler(e)));\n  }\n  update(Product) {\n    const url = `${this.baseUrl}/${Product.id}`;\n    return this.http.put(url, Product).pipe(map(obj => obj), catchError(e => this.errorHandler(e)));\n  }\n  delete(id) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.delete(url).pipe(map(obj => obj), catchError(e => this.errorHandler(e)));\n  }\n  errorHandler(e) {\n    return EMPTY;\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EMPTY","catchError","map","ProductService","constructor","http","baseUrl","showMessage","msg","create","product","post","pipe","obj","e","errorHandler","read","get","readById","id","url","update","Product","put","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\johnl\\OneDrive\\Documentos\\Workspace\\angular-crud\\src\\app\\components\\products\\product.service.ts"],"sourcesContent":["\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EMPTY, Observable, catchError, map } from 'rxjs';\r\nimport { Product } from './product.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  baseUrl = \"http://localhost:3001/products\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  showMessage(msg: string): void { }\r\n\r\n  public create(product: Product): Observable<Product> {\r\n    return this.http.post<Product>(this.baseUrl, product).pipe(\r\n      map((obj) => obj),\r\n      catchError(e => this.errorHandler(e))\r\n    )\r\n  }\r\n  \r\n  public read(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.baseUrl).pipe(\r\n      map((obj) => obj),\r\n      catchError(e => this.errorHandler(e))\r\n    )\r\n  }\r\n\r\n  public readById(id: number): Observable<Product> {\r\n    const url = `${this.baseUrl}/${id}`\r\n    return this.http.get<Product>(url).pipe(\r\n      map((obj) => obj),\r\n      catchError(e => this.errorHandler(e))\r\n    )\r\n  }\r\n  \r\n  public update(Product: Product): Observable<Product> {\r\n    const url = `${this.baseUrl}/${Product.id}`\r\n    return this.http.put<Product>(url, Product).pipe(\r\n      map((obj) => obj),\r\n      catchError(e => this.errorHandler(e))\r\n    )\r\n  }\r\n\r\n  public delete(id: number): Observable<Product> {\r\n    const url = `${this.baseUrl}/${id}`;\r\n    return this.http.delete<Product>(url).pipe(\r\n      map((obj) => obj),\r\n      catchError(e => this.errorHandler(e))\r\n    )\r\n  }\r\n\r\n\r\n\r\n  private errorHandler(e: any): Observable<any> {\r\n    return EMPTY;\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,KAAK,EAAcC,UAAU,EAAEC,GAAG,QAAQ,MAAM;;;AAKzD,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,gCAAgC;EAEF;EAExCC,WAAWA,CAACC,GAAW,GAAU;EAE1BC,MAAMA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,IAAI,CAACL,OAAO,EAAEI,OAAO,CAAC,CAACE,IAAI,CACxDV,GAAG,CAAEW,GAAG,IAAKA,GAAG,CAAC,EACjBZ,UAAU,CAACa,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EACH;EAEOE,IAAIA,CAAA;IACT,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAY,IAAI,CAACX,OAAO,CAAC,CAACM,IAAI,CAChDV,GAAG,CAAEW,GAAG,IAAKA,GAAG,CAAC,EACjBZ,UAAU,CAACa,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EACH;EAEOI,QAAQA,CAACC,EAAU;IACxB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACd,OAAO,IAAIa,EAAE,EAAE;IACnC,OAAO,IAAI,CAACd,IAAI,CAACY,GAAG,CAAUG,GAAG,CAAC,CAACR,IAAI,CACrCV,GAAG,CAAEW,GAAG,IAAKA,GAAG,CAAC,EACjBZ,UAAU,CAACa,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EACH;EAEOO,MAAMA,CAACC,OAAgB;IAC5B,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACd,OAAO,IAAIgB,OAAO,CAACH,EAAE,EAAE;IAC3C,OAAO,IAAI,CAACd,IAAI,CAACkB,GAAG,CAAUH,GAAG,EAAEE,OAAO,CAAC,CAACV,IAAI,CAC9CV,GAAG,CAAEW,GAAG,IAAKA,GAAG,CAAC,EACjBZ,UAAU,CAACa,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EACH;EAEOU,MAAMA,CAACL,EAAU;IACtB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACd,OAAO,IAAIa,EAAE,EAAE;IACnC,OAAO,IAAI,CAACd,IAAI,CAACmB,MAAM,CAAUJ,GAAG,CAAC,CAACR,IAAI,CACxCV,GAAG,CAAEW,GAAG,IAAKA,GAAG,CAAC,EACjBZ,UAAU,CAACa,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EACH;EAIQC,YAAYA,CAACD,CAAM;IACzB,OAAOd,KAAK;EACd;EAAC,QAAAyB,CAAA,G;qBAlDUtB,cAAc,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd3B,cAAc;IAAA4B,OAAA,EAAd5B,cAAc,CAAA6B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}